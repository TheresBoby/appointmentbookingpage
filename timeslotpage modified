import 'package:flutter/material.dart';

class TimeSlotPage extends StatefulWidget {
  final DateTime selectedDate;

  const TimeSlotPage({Key? key, required this.selectedDate}) : super(key: key);

  @override
  _TimeSlotPageState createState() => _TimeSlotPageState();
}

class _TimeSlotPageState extends State<TimeSlotPage> {
  List<String> availableSlots = [];
  List<String> bookedSlots = [];

  @override
  void initState() {
    super.initState();
    fetchSchedule();
  }

  Future<void> fetchSchedule() async {
    // Make an API call to fetch the doctor's schedule for the selected date
    // Update the availableSlots and bookedSlots lists based on the response
    // For example:
    availableSlots = ['08:00', '10:00', '14:00', '18:00'];
    bookedSlots = ['12:00', '16:00', '20:00'];
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Available Appointments'),
      ),
      body: Column(
        children: [
          Expanded(
            child: Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text(
                    'AVAILABLE\nAPPOINTMENTS',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                      fontSize: 24,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  SizedBox(height: 20),
                  Text(
                    '${widget.selectedDate.day} ${_getMonth(widget.selectedDate.month)} ${widget.selectedDate.year}',
                    style: TextStyle(
                      fontSize: 20,
                    ),
                  ),
                  SizedBox(height: 20),
                  Column(
                    children: [
                      ...availableSlots.map((timeSlot) => TimeSlotButton(timeSlot, this, isAvailable: true)).toList(),
                      ...bookedSlots.map((timeSlot) => TimeSlotButton(timeSlot, this, isAvailable: false)).toList(),
                    ],
                  ),
                ],
              ),
            ),
          ),
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: ElevatedButton(
              onPressed: () {
                if (_selectedTimeSlot != null) {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => AppointmentConfirmationPage(
                        date: '${widget.selectedDate.day}/${widget.selectedDate.month}/${widget.selectedDate.year}',
                        timeSlot: _selectedTimeSlot!,
                      ),
                    ),
                  );
                } else {
                  // Show an error message or handle the case when no time slot is selected
                }
              },
              child: Text('Confirm Slot'),
            ),
          ),
        ],
      ),
    );
  }

  String? _selectedTimeSlot;

  void _selectTimeSlot(String timeSlot) {
    setState(() {
      _selectedTimeSlot = timeSlot;
    });
  }

  String _getMonth(int month) {
    switch (month) {
      case 1:
        return 'January';
      case 2:
        return 'February';
      case 3:
        return 'March';
      case 4:
        return 'April';
      case 5:
        return 'May';
      case 6:
        return 'June';
      case 7:
        return 'July';
      case 8:
        return 'August';
      case 9:
        return 'September';
      case 10:
        return 'October';
      case 11:
        return 'November';
      case 12:
        return 'December';
      default:
        return '';
    }
  }
}

class TimeSlotButton extends StatelessWidget {
  final String time;
  final _TimeSlotPageState state;
  final bool isAvailable;

  TimeSlotButton(this.time, this.state, {required this.isAvailable});

  @override
  Widget build(BuildContext context) {
    final isSelected = state._selectedTimeSlot == time;

    return Container(
      margin: EdgeInsets.symmetric(vertical: 5),
      child: ElevatedButton(
        onPressed: isAvailable
            ? () {
                state._selectTimeSlot(time);
              }
            : null,
        style: ElevatedButton.styleFrom(
          backgroundColor: isSelected
              ? Colors.green
              : isAvailable
                  ? Colors.brown.shade100
                  : Colors.grey.shade300,
          padding: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(20),
          ),
        ),
        child: Text(
          time,
          style: TextStyle(
            fontSize: 16,
            fontWeight: FontWeight.bold,
            color: isSelected ? Colors.white : Colors.black,
          ),
        ),
      ),
    );
  }
}

class AppointmentTime extends StatelessWidget {
  final String time;

  AppointmentTime(this.time);

  @override
  Widget build(BuildContext context) {
    return Container(
      margin: EdgeInsets.symmetric(vertical: 5),
      padding: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
      decoration: BoxDecoration(
        color: Colors.brown.shade100,
        borderRadius: BorderRadius.circular(20),
      ),
      child: Text(
        time,
        style: TextStyle(
          fontSize: 16,
          fontWeight: FontWeight.bold,
        ),
      ),
    );
  }
}

class AppointmentConfirmationPage extends StatelessWidget {
  final String date;
  final String timeSlot;

  const AppointmentConfirmationPage({
    Key? key,
    required this.date,
    required this.timeSlot,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Appointment Confirmation'),
      ),
      body: Center(
        child: Container(
          width: 300,
          height: 100,
          decoration: BoxDecoration(
            color: Colors.black,
            borderRadius: BorderRadius.circular(10),
          ),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(
                'Your Appointment is Confirmed:',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 16,
                ),
              ),
              Text(
                'on $date at $timeSlot',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 16,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
